name: Check

on:
  push:
    branches:
      - master
      - release-**
  pull_request:

permissions:
  contents: read

jobs:
  evaluate:
    name: List packages
    runs-on: ubuntu-22.04

    steps:
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v16
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          extra-conf: |
            extra-experimental-features = nix-command flakes

      - name: Set up cache
        uses: DeterminateSystems/magic-nix-cache-action@v8

      - name: List packages
        id: list-packages
        run: |
          nix flake show github:${{ github.repository }}/${{ github.event.pull_request.head.sha || github.sha }} --json | jq -rc 'to_entries | map(.key as $type | select($type == "checks" or $type == "packages") | .value | to_entries | map(.key as $arch | select($arch == "x86_64-linux" or $arch == "x86_64-darwin") | .value | to_entries | map({type: $type, arch: $arch, os: (if $arch == "x86_64-linux" then "ubuntu-22.04" else "macos-14" end), key: .key})) | flatten) | flatten | "packages=\(.)"' >> $GITHUB_OUTPUT

    outputs:
      packages: ${{ steps.list-packages.outputs.packages }}

  check:
    needs: evaluate

    strategy:
      fail-fast: false
      matrix:
        check: ${{ fromJSON(needs.evaluate.outputs.packages) }}

    name: ${{ matrix.check.key }} on ${{ matrix.check.arch }}

    runs-on: ${{ matrix.check.os }}

    steps:
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v16
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          extra-conf: |
            extra-experimental-features = nix-command flakes

      - name: Set up cache
        uses: DeterminateSystems/magic-nix-cache-action@v8

      - name: Check ${{ matrix.check.key }}
        run: nix -L check github:${{ github.repository }}/${{ github.event.pull_request.head.sha || github.sha }}#${{ matrix.check.type }}.${{ matrix.check.arch }}.${{ matrix.check.key }} --no-update-lock-file
